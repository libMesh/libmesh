# Makefile.in generated by automake 1.12.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
#FEATURE_FLAGS += -DFP_SUPPORT_TR1_MATH_FUNCS

# some systems have trouble with the fparser optimizer
@FPARSER_NO_SUPPORT_OPTIMIZER_TRUE@am__append_1 = -DFP_NO_SUPPORT_OPTIMIZER
noinst_PROGRAMS = $(am__EXEEXT_1)
@FPARSER_DEVEL_TRUE@am__append_2 = -I$(srcdir)/extrasrc
@FPARSER_DEVEL_TRUE@am__append_3 = util/tree_grammar_parser \
@FPARSER_DEVEL_TRUE@	util/bytecoderules_parser \
@FPARSER_DEVEL_TRUE@	util/cpp_compress
@FPARSER_DEVEL_TRUE@am__append_4 = extrasrc/fp_opcode_add.inc \
@FPARSER_DEVEL_TRUE@	fpoptimizer/grammar_data.cc
@FPARSER_DEVEL_TRUE@@FPARSER_SUPPORT_OPTIMIZER_TRUE@am__append_5 = $(FPOPTIMIZER_CC_FILES)
@FPARSER_DEVEL_TRUE@am__append_6 = $(BUILT_SOURCES)
@FPARSER_DEVEL_FALSE@@FPARSER_SUPPORT_OPTIMIZER_TRUE@am__append_7 = fpoptimizer.cc
subdir = contrib/fparser
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/ylwrap util/tree_grammar_parser.cc
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cxx_rtti.m4 \
	$(top_srcdir)/m4/all_static.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_openmp.m4 $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_split_version.m4 \
	$(top_srcdir)/m4/ax_tls.m4 $(top_srcdir)/m4/backtrace.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/compiler.m4 \
	$(top_srcdir)/m4/config_environment.m4 \
	$(top_srcdir)/m4/config_summary.m4 \
	$(top_srcdir)/m4/coverage.m4 $(top_srcdir)/m4/cppunit.m4 \
	$(top_srcdir)/m4/demangle.m4 $(top_srcdir)/m4/eigen.m4 \
	$(top_srcdir)/m4/exodus.m4 $(top_srcdir)/m4/feexcept.m4 \
	$(top_srcdir)/m4/fparser.m4 $(top_srcdir)/m4/glpk.m4 \
	$(top_srcdir)/m4/gmv.m4 $(top_srcdir)/m4/gz.m4 \
	$(top_srcdir)/m4/hdf5.m4 $(top_srcdir)/m4/laspack.m4 \
	$(top_srcdir)/m4/libhilbert.m4 \
	$(top_srcdir)/m4/libmesh_compiler_features.m4 \
	$(top_srcdir)/m4/libmesh_core_features.m4 \
	$(top_srcdir)/m4/libmesh_method.m4 \
	$(top_srcdir)/m4/libmesh_optional_packages.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/locale.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/metis.m4 $(top_srcdir)/m4/mpi.m4 \
	$(top_srcdir)/m4/namespaces.m4 $(top_srcdir)/m4/nanoflann.m4 \
	$(top_srcdir)/m4/nemesis.m4 $(top_srcdir)/m4/netcdf.m4 \
	$(top_srcdir)/m4/parmetis.m4 $(top_srcdir)/m4/petsc.m4 \
	$(top_srcdir)/m4/precision.m4 \
	$(top_srcdir)/m4/prefix_config.m4 $(top_srcdir)/m4/sfc.m4 \
	$(top_srcdir)/m4/slepc.m4 $(top_srcdir)/m4/sstream.m4 \
	$(top_srcdir)/m4/strstream.m4 $(top_srcdir)/m4/tbb.m4 \
	$(top_srcdir)/m4/tecio.m4 $(top_srcdir)/m4/tecplot.m4 \
	$(top_srcdir)/m4/tetgen.m4 $(top_srcdir)/m4/threads.m4 \
	$(top_srcdir)/m4/triangle.m4 $(top_srcdir)/m4/trilinos.m4 \
	$(top_srcdir)/m4/unordered.m4 $(top_srcdir)/m4/vtk.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/libmesh_config.h.tmp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libfparser_la_LIBADD =
am__libfparser_la_SOURCES_DIST = fparser.cc lib/crc32.hh \
	lib/autoptr.hh lib/functional.hh fpoptimizer/hash.hh \
	fpoptimizer/codetree.hh fpoptimizer/grammar.hh \
	fpoptimizer/consts.hh fpoptimizer/optimize.hh \
	fpoptimizer/opcodename.hh fpoptimizer/opcodename.cc \
	fpoptimizer/bytecodesynth.hh fpoptimizer/bytecodesynth.cc \
	fpoptimizer/valuerange.hh fpoptimizer/rangeestimation.hh \
	fpoptimizer/constantfolding.hh fpoptimizer/logic_boolgroups.hh \
	fpoptimizer/logic_collections.hh \
	fpoptimizer/logic_ifoperations.hh \
	fpoptimizer/logic_powoperations.hh \
	fpoptimizer/logic_comparisons.hh fpoptimizer/codetree.cc \
	fpoptimizer/debug.cc fpoptimizer/grammar.cc \
	fpoptimizer/grammar_data.cc fpoptimizer/optimize.cc \
	fpoptimizer/optimize_match.cc fpoptimizer/optimize_synth.cc \
	fpoptimizer/optimize_debug.cc fpoptimizer/hash.cc \
	fpoptimizer/makebytecode.cc fpoptimizer/readbytecode.cc \
	fpoptimizer/constantfolding.cc fpoptimizer/valuerange.cc \
	fpoptimizer/rangeestimation.cc fpoptimizer/transformations.cc \
	fpoptimizer/cse.cc fpoptimizer/optimize_main.cc fpoptimizer.cc
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = fpoptimizer/libfparser_la-opcodename.lo \
	fpoptimizer/libfparser_la-bytecodesynth.lo \
	fpoptimizer/libfparser_la-codetree.lo \
	fpoptimizer/libfparser_la-debug.lo \
	fpoptimizer/libfparser_la-grammar.lo \
	fpoptimizer/libfparser_la-grammar_data.lo \
	fpoptimizer/libfparser_la-optimize.lo \
	fpoptimizer/libfparser_la-optimize_match.lo \
	fpoptimizer/libfparser_la-optimize_synth.lo \
	fpoptimizer/libfparser_la-optimize_debug.lo \
	fpoptimizer/libfparser_la-hash.lo \
	fpoptimizer/libfparser_la-makebytecode.lo \
	fpoptimizer/libfparser_la-readbytecode.lo \
	fpoptimizer/libfparser_la-constantfolding.lo \
	fpoptimizer/libfparser_la-valuerange.lo \
	fpoptimizer/libfparser_la-rangeestimation.lo \
	fpoptimizer/libfparser_la-transformations.lo \
	fpoptimizer/libfparser_la-cse.lo \
	fpoptimizer/libfparser_la-optimize_main.lo
@FPARSER_DEVEL_TRUE@@FPARSER_SUPPORT_OPTIMIZER_TRUE@am__objects_2 = $(am__objects_1)
@FPARSER_DEVEL_FALSE@@FPARSER_SUPPORT_OPTIMIZER_TRUE@am__objects_3 = libfparser_la-fpoptimizer.lo
am_libfparser_la_OBJECTS = libfparser_la-fparser.lo $(am__objects_2) \
	$(am__objects_3)
libfparser_la_OBJECTS = $(am_libfparser_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
@FPARSER_DEVEL_TRUE@am__EXEEXT_1 = util/tree_grammar_parser$(EXEEXT) \
@FPARSER_DEVEL_TRUE@	util/bytecoderules_parser$(EXEEXT) \
@FPARSER_DEVEL_TRUE@	util/cpp_compress$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_util_bytecoderules_parser_OBJECTS =  \
	util/util_bytecoderules_parser-bytecoderules_parser.$(OBJEXT)
util_bytecoderules_parser_OBJECTS =  \
	$(am_util_bytecoderules_parser_OBJECTS)
util_bytecoderules_parser_LDADD = $(LDADD)
util_bytecoderules_parser_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(util_bytecoderules_parser_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_util_cpp_compress_OBJECTS =  \
	util/util_cpp_compress-cpp_compress.$(OBJEXT) \
	util/util_cpp_compress-cpp_compress_main.$(OBJEXT)
util_cpp_compress_OBJECTS = $(am_util_cpp_compress_OBJECTS)
util_cpp_compress_LDADD = $(LDADD)
util_cpp_compress_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_util_tree_grammar_parser_OBJECTS =  \
	util/util_tree_grammar_parser-tree_grammar_parser.$(OBJEXT) \
	fpoptimizer/util_tree_grammar_parser-opcodename.$(OBJEXT) \
	util_tree_grammar_parser-fparser.$(OBJEXT)
util_tree_grammar_parser_OBJECTS =  \
	$(am_util_tree_grammar_parser_OBJECTS)
util_tree_grammar_parser_LDADD = $(LDADD)
util_tree_grammar_parser_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
@MAINTAINER_MODE_FALSE@am__skipyacc = test -f $@ ||
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_@AM_V@)
am__v_YACC_ = $(am__v_YACC_@AM_DEFAULT_V@)
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
YLWRAP = $(top_srcdir)/build-aux/ylwrap
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libfparser_la_SOURCES) \
	$(util_bytecoderules_parser_SOURCES) \
	$(util_cpp_compress_SOURCES) \
	$(util_tree_grammar_parser_SOURCES)
DIST_SOURCES = $(am__libfparser_la_SOURCES_DIST) \
	$(util_bytecoderules_parser_SOURCES) \
	$(util_cpp_compress_SOURCES) \
	$(util_tree_grammar_parser_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = extrasrc
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AZTECOO_INCLUDES = @AZTECOO_INCLUDES@
AZTECOO_LIBS = @AZTECOO_LIBS@
AZTECOO_MAKEFILE_EXPORT = @AZTECOO_MAKEFILE_EXPORT@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BUILD_ARCH = @BUILD_ARCH@
BUILD_DEVSTATUS = @BUILD_DEVSTATUS@
BUILD_HOST = @BUILD_HOST@
BUILD_USER = @BUILD_USER@
BUILD_VERSION = @BUILD_VERSION@
BUNZIP2 = @BUNZIP2@
BZIP2 = @BZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_DBG = @CFLAGS_DBG@
CFLAGS_DEVEL = @CFLAGS_DEVEL@
CFLAGS_DVL = @CFLAGS_DVL@
CFLAGS_OPROF = @CFLAGS_OPROF@
CFLAGS_OPT = @CFLAGS_OPT@
CFLAGS_PROF = @CFLAGS_PROF@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPFLAGS_DBG = @CPPFLAGS_DBG@
CPPFLAGS_DEVEL = @CPPFLAGS_DEVEL@
CPPFLAGS_OPROF = @CPPFLAGS_OPROF@
CPPFLAGS_OPT = @CPPFLAGS_OPT@
CPPFLAGS_PROF = @CPPFLAGS_PROF@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXFLAGS_DBG = @CXXFLAGS_DBG@
CXXFLAGS_DEVEL = @CXXFLAGS_DEVEL@
CXXFLAGS_DVL = @CXXFLAGS_DVL@
CXXFLAGS_OPROF = @CXXFLAGS_OPROF@
CXXFLAGS_OPT = @CXXFLAGS_OPT@
CXXFLAGS_PROF = @CXXFLAGS_PROF@
CXXSHAREDFLAG = @CXXSHAREDFLAG@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOTPATH = @DOTPATH@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DTK_MAKEFILE_EXPORT = @DTK_MAKEFILE_EXPORT@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EIGEN_INCLUDE = @EIGEN_INCLUDE@
EXEEXT = @EXEEXT@
EXODUS_INCLUDE = @EXODUS_INCLUDE@
EXODUS_NOT_NETCDF4_FLAG = @EXODUS_NOT_NETCDF4_FLAG@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
FPARSER_INCLUDE = @FPARSER_INCLUDE@
FPARSER_LIBRARY = @FPARSER_LIBRARY@
GCOV_FLAGS = @GCOV_FLAGS@
GIT_REVISION = @GIT_REVISION@
GLPK_INCLUDE = @GLPK_INCLUDE@
GLPK_LIBRARY = @GLPK_LIBRARY@
GMV_INCLUDE = @GMV_INCLUDE@
GMV_LIBRARY = @GMV_LIBRARY@
GREP = @GREP@
GXX_VERSION = @GXX_VERSION@
GZSTREAM_INCLUDE = @GZSTREAM_INCLUDE@
GZSTREAM_LIB = @GZSTREAM_LIB@
HAVE_DOT = @HAVE_DOT@
HAVE_GCOV_TOOLS = @HAVE_GCOV_TOOLS@
HDF5_CFLAGS = @HDF5_CFLAGS@
HDF5_CPPFLAGS = @HDF5_CPPFLAGS@
HDF5_CXXLIBS = @HDF5_CXXLIBS@
HDF5_DIR = @HDF5_DIR@
HDF5_FLIBS = @HDF5_FLIBS@
HDF5_LIBS = @HDF5_LIBS@
HDF5_PREFIX = @HDF5_PREFIX@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LASPACK_INCLUDE = @LASPACK_INCLUDE@
LASPACK_LIB = @LASPACK_LIB@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBHILBERT_INCLUDE = @LIBHILBERT_INCLUDE@
LIBHILBERT_LIBRARY = @LIBHILBERT_LIBRARY@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
METHOD = @METHOD@
METHODS = @METHODS@
METIS_INCLUDE = @METIS_INCLUDE@
METIS_LIB = @METIS_LIB@
MKDIR_P = @MKDIR_P@
ML_INCLUDES = @ML_INCLUDES@
ML_LIBS = @ML_LIBS@
ML_MAKEFILE_EXPORT = @ML_MAKEFILE_EXPORT@
MPCXX = @MPCXX@
MPI = @MPI@
MPI_IMPL = @MPI_IMPL@
MPI_INCLUDES_PATH = @MPI_INCLUDES_PATH@
MPI_INCLUDES_PATHS = @MPI_INCLUDES_PATHS@
MPI_LIBS = @MPI_LIBS@
MPI_LIBS_PATH = @MPI_LIBS_PATH@
MPI_LIBS_PATHS = @MPI_LIBS_PATHS@
NANOFLANN_INCLUDE = @NANOFLANN_INCLUDE@
NEMESIS_INCLUDE = @NEMESIS_INCLUDE@
NETCDF_INCLUDE = @NETCDF_INCLUDE@
NM = @NM@
NMEDIT = @NMEDIT@
NODEPRECATEDFLAG = @NODEPRECATEDFLAG@
NOX_INCLUDES = @NOX_INCLUDES@
NOX_LIBS = @NOX_LIBS@
NOX_MAKEFILE_EXPORT = @NOX_MAKEFILE_EXPORT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
OPENMP_FFLAGS = @OPENMP_FFLAGS@
OPROFILE_FLAGS = @OPROFILE_FLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARMETIS_INCLUDE = @PARMETIS_INCLUDE@
PARMETIS_LIB = @PARMETIS_LIB@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PETSCARCH = @PETSCARCH@
PETSCINCLUDEDIRS = @PETSCINCLUDEDIRS@
PETSCLINKLIBS = @PETSCLINKLIBS@
PETSC_ARCH = @PETSC_ARCH@
PETSC_CC_INCLUDES = @PETSC_CC_INCLUDES@
PETSC_DIR = @PETSC_DIR@
PETSC_FC_INCLUDES = @PETSC_FC_INCLUDES@
PKG_CONFIG = @PKG_CONFIG@
PROFILING_FLAGS = @PROFILING_FLAGS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PWD = @PWD@
RANLIB = @RANLIB@
RPATHFLAG = @RPATHFLAG@
SED = @SED@
SET_MAKE = @SET_MAKE@
SFC_INCLUDE = @SFC_INCLUDE@
SFC_LIB = @SFC_LIB@
SHELL = @SHELL@
SLEPC_DIR = @SLEPC_DIR@
SLEPC_INCLUDE = @SLEPC_INCLUDE@
SLEPC_LIBS = @SLEPC_LIBS@
STRIP = @STRIP@
TBB_INCLUDE = @TBB_INCLUDE@
TBB_LIBRARY = @TBB_LIBRARY@
TECIO_CPPFLAGS = @TECIO_CPPFLAGS@
TECIO_INCLUDE = @TECIO_INCLUDE@
TETGEN_INCLUDE = @TETGEN_INCLUDE@
TETGEN_LIBRARY = @TETGEN_LIBRARY@
TPETRA_INCLUDES = @TPETRA_INCLUDES@
TPETRA_LIBS = @TPETRA_LIBS@
TPETRA_MAKEFILE_EXPORT = @TPETRA_MAKEFILE_EXPORT@
TRIANGLE_INCLUDE = @TRIANGLE_INCLUDE@
TRIANGLE_LIBRARY = @TRIANGLE_LIBRARY@
TRILINOS_DIR = @TRILINOS_DIR@
TRILINOS_INCLUDES = @TRILINOS_INCLUDES@
TRILINOS_LIBS = @TRILINOS_LIBS@
TRILINOS_MAKEFILE_EXPORT = @TRILINOS_MAKEFILE_EXPORT@
VERSION = @VERSION@
VTK_DIR = @VTK_DIR@
VTK_INCLUDE = @VTK_INCLUDE@
VTK_LIBRARY = @VTK_LIBRARY@
XZ = @XZ@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enabledefaultcommworld = @enabledefaultcommworld@
enablelegacyincludepaths = @enablelegacyincludepaths@
enablepetsc = @enablepetsc@
enablewarnings = @enablewarnings@
exec_prefix = @exec_prefix@
gitquery = @gitquery@
have_gcov = @have_gcov@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@

# generally we do not install contributed headers, but for fparser.hh we
# must because it can optionally be included directly by our
# parsed_function.h
includedir = $(prefix)/include/libmesh
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libmesh_CFLAGS = @libmesh_CFLAGS@
libmesh_CPPFLAGS = @libmesh_CPPFLAGS@
libmesh_CXXFLAGS = @libmesh_CXXFLAGS@
libmesh_LDFLAGS = @libmesh_LDFLAGS@
libmesh_contrib_INCLUDES = @libmesh_contrib_INCLUDES@
libmesh_installed_LIBS = @libmesh_installed_LIBS@
libmesh_optional_INCLUDES = @libmesh_optional_INCLUDES@
libmesh_optional_LIBS = @libmesh_optional_LIBS@
libmesh_pkgconfig_requires = @libmesh_pkgconfig_requires@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
petscmajor = @petscmajor@
petscmajorminor = @petscmajorminor@
petscversion = @petscversion@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
vtkbuild = @vtkbuild@
vtkmajor = @vtkmajor@
vtkversion = @vtkversion@
AUTOMAKE_OPTIONS = subdir-objects 
AM_CPPFLAGS = $(CPPFLAGS_OPT) -I$(srcdir)/fpoptimizer $(am__append_2)
AM_CFLAGS = $(CFLAGS_OPT)
AM_CXXFLAGS = $(CXXFLAGS_OPT)

#FEATURE_FLAGS += -DFP_USE_THREAD_SAFE_EVAL
#FEATURE_FLAGS += -DFP_USE_THREAD_SAFE_EVAL_WITH_ALLOCA
#FEATURE_FLAGS += -DFP_NO_EVALUATION_CHECKS
#FEATURE_FLAGS += -D_GLIBCXX_DEBUG
#FEATURE_FLAGS += -DFP_DISABLE_SHORTCUT_LOGICAL_EVALUATION
#FEATURE_FLAGS += -DFP_SUPPORT_MPFR_FLOAT_TYPE
#FEATURE_FLAGS += -DFP_SUPPORT_GMP_INT_TYPE
#FEATURE_FLAGS += -DFP_USE_STRTOLD
FEATURE_FLAGS = -DFP_ENABLE_EVAL $(am__append_1) \
	-DFP_SUPPORT_FLOAT_TYPE -DFP_SUPPORT_LONG_DOUBLE_TYPE \
	-DFP_SUPPORT_LONG_INT_TYPE -DFP_SUPPORT_COMPLEX_DOUBLE_TYPE \
	-DFP_SUPPORT_COMPLEX_FLOAT_TYPE \
	-DFP_SUPPORT_COMPLEX_LONG_DOUBLE_TYPE \
	-DFUNCTIONPARSER_SUPPORT_DEBUGGING
EXTRA_DIST = util/bytecoderules.dat util/bytecoderules_header.txt \
	fpoptimizer/treerules.dat $(FPOPTIMIZER_CC_FILES) \
	fpoptimizer/fpoptimizer_header.txt \
	fpoptimizer/fpoptimizer_footer.txt
BUILT_SOURCES = $(am__append_4)

# when doing 'make clean' we need to remove the generated sources
CLEANFILES = fpoptimizer/grammar_data.cc $(am__append_6)
DISTCLEANFILES = util/tree_grammar_parser # in case it wasn't \
	conditionally cleaned
include_HEADERS = fparser.hh
FPOPTIMIZER_CC_FILES = \
	    lib/crc32.hh \
	    lib/autoptr.hh \
	    lib/functional.hh \
	    fpoptimizer/hash.hh \
	    fpoptimizer/codetree.hh \
	    fpoptimizer/grammar.hh \
	    fpoptimizer/consts.hh \
	    fpoptimizer/optimize.hh \
	    fpoptimizer/opcodename.hh \
	    fpoptimizer/opcodename.cc \
	    fpoptimizer/bytecodesynth.hh \
	    fpoptimizer/bytecodesynth.cc \
	    fpoptimizer/valuerange.hh \
	    fpoptimizer/rangeestimation.hh \
	    fpoptimizer/constantfolding.hh \
	    fpoptimizer/logic_boolgroups.hh \
	    fpoptimizer/logic_collections.hh \
	    fpoptimizer/logic_ifoperations.hh \
	    fpoptimizer/logic_powoperations.hh \
	    fpoptimizer/logic_comparisons.hh \
	    fpoptimizer/codetree.cc \
	    fpoptimizer/debug.cc \
	    fpoptimizer/grammar.cc \
	    fpoptimizer/grammar_data.cc \
	    fpoptimizer/optimize.cc \
	    fpoptimizer/optimize_match.cc \
	    fpoptimizer/optimize_synth.cc \
	    fpoptimizer/optimize_debug.cc \
	    fpoptimizer/hash.cc \
	    fpoptimizer/makebytecode.cc \
	    fpoptimizer/readbytecode.cc \
	    fpoptimizer/constantfolding.cc \
	    fpoptimizer/valuerange.cc \
	    fpoptimizer/rangeestimation.cc \
	    fpoptimizer/transformations.cc \
	    fpoptimizer/cse.cc \
	    fpoptimizer/optimize_main.cc

noinst_LTLIBRARIES = libfparser.la
libfparser_la_SOURCES = fparser.cc $(am__append_5) $(am__append_7)
libfparser_la_CPPFLAGS = $(AM_CPPFLAGS) $(FEATURE_FLAGS)

# util/tree_grammar_parser is a utility which is required to build 
# fpoptimizer/grammar_data.cc.  But this file itself is only needed
# when we are compiling with optimization support enabled.
#
# Note that we always need this rule, so 'make dist' will work
util_tree_grammar_parser_CXXFLAGS = # nothing fancy - don't use our compile flags for this utility code lest it be horribly slow
util_tree_grammar_parser_SOURCES = \
                                 util/tree_grammar_parser.yy fpoptimizer/opcodename.cc fpoptimizer/opcodename.hh \
                                 mpfr/MpfrFloat.hh \
                                 mpfr/GmpInt.hh \
                                 fparser_mpfr.hh \
                                 fparser.hh \
			 	 fparser.cc \
                                 fpoptimizer/logic_comparisons.hh \
                                 fpoptimizer/constantfolding.hh \
                                 fpoptimizer/logic_ifoperations.hh \
                                 fpoptimizer/instantiate.hh \
                                 fpoptimizer/opcodename.hh \
                                 fpoptimizer/consts.hh \
                                 fpoptimizer/optimize.hh \
                                 fpoptimizer/bytecodesynth.hh \
                                 fpoptimizer/valuerange.hh \
                                 fpoptimizer/codetree.hh \
                                 fpoptimizer/logic_collections.hh \
                                 fpoptimizer/hash.hh \
                                 fpoptimizer/grammar.hh \
                                 fpoptimizer/rangeestimation.hh \
                                 fpoptimizer/logic_boolgroups.hh \
                                 fpoptimizer/logic_powoperations.hh \
                                 util/cpp_compress.hh \
                                 fpconfig.hh \
                                 lib/functional.hh \
                                 lib/crc32.hh \
                                 lib/autoptr.hh \
                                 extrasrc/fpaux.hh \
                                 extrasrc/fptypes.hh \
                                 fparser_gmpint.hh extrasrc/fp_identifier_parser.inc

util_bytecoderules_parser_CXXFLAGS = # nothing fancy - don't use our compile flags for this utility code lest it be horribly slow
util_bytecoderules_parser_SOURCES = util/bytecoderules_parser.cc
util_cpp_compress_CXXFLAGS = # nothing fancy - don't use our compile flags for this utility code lest it be horribly slow
util_cpp_compress_SOURCES = util/cpp_compress.hh util/cpp_compress.cc util/cpp_compress_main.cc
@FPARSER_DEVEL_FALSE@SUBDIRS = extrasrc
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj .yy
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu contrib/fparser/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu contrib/fparser/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
fpoptimizer/$(am__dirstamp):
	@$(MKDIR_P) fpoptimizer
	@: > fpoptimizer/$(am__dirstamp)
fpoptimizer/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) fpoptimizer/$(DEPDIR)
	@: > fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-opcodename.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-bytecodesynth.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-codetree.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-debug.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-grammar.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-grammar_data.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-optimize.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-optimize_match.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-optimize_synth.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-optimize_debug.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-hash.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-makebytecode.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-readbytecode.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-constantfolding.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-valuerange.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-rangeestimation.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-transformations.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-cse.lo: fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/libfparser_la-optimize_main.lo:  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
libfparser.la: $(libfparser_la_OBJECTS) $(libfparser_la_DEPENDENCIES) $(EXTRA_libfparser_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libfparser_la_OBJECTS) $(libfparser_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
util/$(am__dirstamp):
	@$(MKDIR_P) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/util_bytecoderules_parser-bytecoderules_parser.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/bytecoderules_parser$(EXEEXT): $(util_bytecoderules_parser_OBJECTS) $(util_bytecoderules_parser_DEPENDENCIES) $(EXTRA_util_bytecoderules_parser_DEPENDENCIES) util/$(am__dirstamp)
	@rm -f util/bytecoderules_parser$(EXEEXT)
	$(AM_V_CXXLD)$(util_bytecoderules_parser_LINK) $(util_bytecoderules_parser_OBJECTS) $(util_bytecoderules_parser_LDADD) $(LIBS)
util/util_cpp_compress-cpp_compress.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/util_cpp_compress-cpp_compress_main.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/cpp_compress$(EXEEXT): $(util_cpp_compress_OBJECTS) $(util_cpp_compress_DEPENDENCIES) $(EXTRA_util_cpp_compress_DEPENDENCIES) util/$(am__dirstamp)
	@rm -f util/cpp_compress$(EXEEXT)
	$(AM_V_CXXLD)$(util_cpp_compress_LINK) $(util_cpp_compress_OBJECTS) $(util_cpp_compress_LDADD) $(LIBS)
util/util_tree_grammar_parser-tree_grammar_parser.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
fpoptimizer/util_tree_grammar_parser-opcodename.$(OBJEXT):  \
	fpoptimizer/$(am__dirstamp) \
	fpoptimizer/$(DEPDIR)/$(am__dirstamp)
util/tree_grammar_parser$(EXEEXT): $(util_tree_grammar_parser_OBJECTS) $(util_tree_grammar_parser_DEPENDENCIES) $(EXTRA_util_tree_grammar_parser_DEPENDENCIES) util/$(am__dirstamp)
	@rm -f util/tree_grammar_parser$(EXEEXT)
	$(AM_V_CXXLD)$(util_tree_grammar_parser_LINK) $(util_tree_grammar_parser_OBJECTS) $(util_tree_grammar_parser_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f fpoptimizer/*.$(OBJEXT)
	-rm -f fpoptimizer/*.lo
	-rm -f util/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfparser_la-fparser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfparser_la-fpoptimizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util_tree_grammar_parser-fparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-bytecodesynth.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-codetree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-constantfolding.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-cse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-grammar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-grammar_data.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-makebytecode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-opcodename.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-optimize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-optimize_debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-optimize_main.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-optimize_match.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-optimize_synth.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-rangeestimation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-readbytecode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-transformations.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/libfparser_la-valuerange.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@fpoptimizer/$(DEPDIR)/util_tree_grammar_parser-opcodename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/util_bytecoderules_parser-bytecoderules_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/util_cpp_compress-cpp_compress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/util_cpp_compress-cpp_compress_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/util_tree_grammar_parser-tree_grammar_parser.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libfparser_la-fparser.lo: fparser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfparser_la-fparser.lo -MD -MP -MF $(DEPDIR)/libfparser_la-fparser.Tpo -c -o libfparser_la-fparser.lo `test -f 'fparser.cc' || echo '$(srcdir)/'`fparser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfparser_la-fparser.Tpo $(DEPDIR)/libfparser_la-fparser.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fparser.cc' object='libfparser_la-fparser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfparser_la-fparser.lo `test -f 'fparser.cc' || echo '$(srcdir)/'`fparser.cc

fpoptimizer/libfparser_la-opcodename.lo: fpoptimizer/opcodename.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-opcodename.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-opcodename.Tpo -c -o fpoptimizer/libfparser_la-opcodename.lo `test -f 'fpoptimizer/opcodename.cc' || echo '$(srcdir)/'`fpoptimizer/opcodename.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-opcodename.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-opcodename.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/opcodename.cc' object='fpoptimizer/libfparser_la-opcodename.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-opcodename.lo `test -f 'fpoptimizer/opcodename.cc' || echo '$(srcdir)/'`fpoptimizer/opcodename.cc

fpoptimizer/libfparser_la-bytecodesynth.lo: fpoptimizer/bytecodesynth.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-bytecodesynth.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-bytecodesynth.Tpo -c -o fpoptimizer/libfparser_la-bytecodesynth.lo `test -f 'fpoptimizer/bytecodesynth.cc' || echo '$(srcdir)/'`fpoptimizer/bytecodesynth.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-bytecodesynth.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-bytecodesynth.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/bytecodesynth.cc' object='fpoptimizer/libfparser_la-bytecodesynth.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-bytecodesynth.lo `test -f 'fpoptimizer/bytecodesynth.cc' || echo '$(srcdir)/'`fpoptimizer/bytecodesynth.cc

fpoptimizer/libfparser_la-codetree.lo: fpoptimizer/codetree.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-codetree.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-codetree.Tpo -c -o fpoptimizer/libfparser_la-codetree.lo `test -f 'fpoptimizer/codetree.cc' || echo '$(srcdir)/'`fpoptimizer/codetree.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-codetree.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-codetree.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/codetree.cc' object='fpoptimizer/libfparser_la-codetree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-codetree.lo `test -f 'fpoptimizer/codetree.cc' || echo '$(srcdir)/'`fpoptimizer/codetree.cc

fpoptimizer/libfparser_la-debug.lo: fpoptimizer/debug.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-debug.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-debug.Tpo -c -o fpoptimizer/libfparser_la-debug.lo `test -f 'fpoptimizer/debug.cc' || echo '$(srcdir)/'`fpoptimizer/debug.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-debug.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-debug.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/debug.cc' object='fpoptimizer/libfparser_la-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-debug.lo `test -f 'fpoptimizer/debug.cc' || echo '$(srcdir)/'`fpoptimizer/debug.cc

fpoptimizer/libfparser_la-grammar.lo: fpoptimizer/grammar.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-grammar.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-grammar.Tpo -c -o fpoptimizer/libfparser_la-grammar.lo `test -f 'fpoptimizer/grammar.cc' || echo '$(srcdir)/'`fpoptimizer/grammar.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-grammar.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-grammar.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/grammar.cc' object='fpoptimizer/libfparser_la-grammar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-grammar.lo `test -f 'fpoptimizer/grammar.cc' || echo '$(srcdir)/'`fpoptimizer/grammar.cc

fpoptimizer/libfparser_la-grammar_data.lo: fpoptimizer/grammar_data.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-grammar_data.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-grammar_data.Tpo -c -o fpoptimizer/libfparser_la-grammar_data.lo `test -f 'fpoptimizer/grammar_data.cc' || echo '$(srcdir)/'`fpoptimizer/grammar_data.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-grammar_data.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-grammar_data.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/grammar_data.cc' object='fpoptimizer/libfparser_la-grammar_data.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-grammar_data.lo `test -f 'fpoptimizer/grammar_data.cc' || echo '$(srcdir)/'`fpoptimizer/grammar_data.cc

fpoptimizer/libfparser_la-optimize.lo: fpoptimizer/optimize.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-optimize.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-optimize.Tpo -c -o fpoptimizer/libfparser_la-optimize.lo `test -f 'fpoptimizer/optimize.cc' || echo '$(srcdir)/'`fpoptimizer/optimize.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-optimize.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-optimize.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/optimize.cc' object='fpoptimizer/libfparser_la-optimize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-optimize.lo `test -f 'fpoptimizer/optimize.cc' || echo '$(srcdir)/'`fpoptimizer/optimize.cc

fpoptimizer/libfparser_la-optimize_match.lo: fpoptimizer/optimize_match.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-optimize_match.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-optimize_match.Tpo -c -o fpoptimizer/libfparser_la-optimize_match.lo `test -f 'fpoptimizer/optimize_match.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_match.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-optimize_match.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-optimize_match.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/optimize_match.cc' object='fpoptimizer/libfparser_la-optimize_match.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-optimize_match.lo `test -f 'fpoptimizer/optimize_match.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_match.cc

fpoptimizer/libfparser_la-optimize_synth.lo: fpoptimizer/optimize_synth.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-optimize_synth.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-optimize_synth.Tpo -c -o fpoptimizer/libfparser_la-optimize_synth.lo `test -f 'fpoptimizer/optimize_synth.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_synth.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-optimize_synth.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-optimize_synth.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/optimize_synth.cc' object='fpoptimizer/libfparser_la-optimize_synth.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-optimize_synth.lo `test -f 'fpoptimizer/optimize_synth.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_synth.cc

fpoptimizer/libfparser_la-optimize_debug.lo: fpoptimizer/optimize_debug.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-optimize_debug.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-optimize_debug.Tpo -c -o fpoptimizer/libfparser_la-optimize_debug.lo `test -f 'fpoptimizer/optimize_debug.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_debug.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-optimize_debug.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-optimize_debug.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/optimize_debug.cc' object='fpoptimizer/libfparser_la-optimize_debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-optimize_debug.lo `test -f 'fpoptimizer/optimize_debug.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_debug.cc

fpoptimizer/libfparser_la-hash.lo: fpoptimizer/hash.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-hash.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-hash.Tpo -c -o fpoptimizer/libfparser_la-hash.lo `test -f 'fpoptimizer/hash.cc' || echo '$(srcdir)/'`fpoptimizer/hash.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-hash.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-hash.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/hash.cc' object='fpoptimizer/libfparser_la-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-hash.lo `test -f 'fpoptimizer/hash.cc' || echo '$(srcdir)/'`fpoptimizer/hash.cc

fpoptimizer/libfparser_la-makebytecode.lo: fpoptimizer/makebytecode.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-makebytecode.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-makebytecode.Tpo -c -o fpoptimizer/libfparser_la-makebytecode.lo `test -f 'fpoptimizer/makebytecode.cc' || echo '$(srcdir)/'`fpoptimizer/makebytecode.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-makebytecode.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-makebytecode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/makebytecode.cc' object='fpoptimizer/libfparser_la-makebytecode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-makebytecode.lo `test -f 'fpoptimizer/makebytecode.cc' || echo '$(srcdir)/'`fpoptimizer/makebytecode.cc

fpoptimizer/libfparser_la-readbytecode.lo: fpoptimizer/readbytecode.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-readbytecode.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-readbytecode.Tpo -c -o fpoptimizer/libfparser_la-readbytecode.lo `test -f 'fpoptimizer/readbytecode.cc' || echo '$(srcdir)/'`fpoptimizer/readbytecode.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-readbytecode.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-readbytecode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/readbytecode.cc' object='fpoptimizer/libfparser_la-readbytecode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-readbytecode.lo `test -f 'fpoptimizer/readbytecode.cc' || echo '$(srcdir)/'`fpoptimizer/readbytecode.cc

fpoptimizer/libfparser_la-constantfolding.lo: fpoptimizer/constantfolding.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-constantfolding.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-constantfolding.Tpo -c -o fpoptimizer/libfparser_la-constantfolding.lo `test -f 'fpoptimizer/constantfolding.cc' || echo '$(srcdir)/'`fpoptimizer/constantfolding.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-constantfolding.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-constantfolding.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/constantfolding.cc' object='fpoptimizer/libfparser_la-constantfolding.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-constantfolding.lo `test -f 'fpoptimizer/constantfolding.cc' || echo '$(srcdir)/'`fpoptimizer/constantfolding.cc

fpoptimizer/libfparser_la-valuerange.lo: fpoptimizer/valuerange.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-valuerange.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-valuerange.Tpo -c -o fpoptimizer/libfparser_la-valuerange.lo `test -f 'fpoptimizer/valuerange.cc' || echo '$(srcdir)/'`fpoptimizer/valuerange.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-valuerange.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-valuerange.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/valuerange.cc' object='fpoptimizer/libfparser_la-valuerange.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-valuerange.lo `test -f 'fpoptimizer/valuerange.cc' || echo '$(srcdir)/'`fpoptimizer/valuerange.cc

fpoptimizer/libfparser_la-rangeestimation.lo: fpoptimizer/rangeestimation.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-rangeestimation.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-rangeestimation.Tpo -c -o fpoptimizer/libfparser_la-rangeestimation.lo `test -f 'fpoptimizer/rangeestimation.cc' || echo '$(srcdir)/'`fpoptimizer/rangeestimation.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-rangeestimation.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-rangeestimation.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/rangeestimation.cc' object='fpoptimizer/libfparser_la-rangeestimation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-rangeestimation.lo `test -f 'fpoptimizer/rangeestimation.cc' || echo '$(srcdir)/'`fpoptimizer/rangeestimation.cc

fpoptimizer/libfparser_la-transformations.lo: fpoptimizer/transformations.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-transformations.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-transformations.Tpo -c -o fpoptimizer/libfparser_la-transformations.lo `test -f 'fpoptimizer/transformations.cc' || echo '$(srcdir)/'`fpoptimizer/transformations.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-transformations.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-transformations.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/transformations.cc' object='fpoptimizer/libfparser_la-transformations.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-transformations.lo `test -f 'fpoptimizer/transformations.cc' || echo '$(srcdir)/'`fpoptimizer/transformations.cc

fpoptimizer/libfparser_la-cse.lo: fpoptimizer/cse.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-cse.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-cse.Tpo -c -o fpoptimizer/libfparser_la-cse.lo `test -f 'fpoptimizer/cse.cc' || echo '$(srcdir)/'`fpoptimizer/cse.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-cse.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-cse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/cse.cc' object='fpoptimizer/libfparser_la-cse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-cse.lo `test -f 'fpoptimizer/cse.cc' || echo '$(srcdir)/'`fpoptimizer/cse.cc

fpoptimizer/libfparser_la-optimize_main.lo: fpoptimizer/optimize_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/libfparser_la-optimize_main.lo -MD -MP -MF fpoptimizer/$(DEPDIR)/libfparser_la-optimize_main.Tpo -c -o fpoptimizer/libfparser_la-optimize_main.lo `test -f 'fpoptimizer/optimize_main.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/libfparser_la-optimize_main.Tpo fpoptimizer/$(DEPDIR)/libfparser_la-optimize_main.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/optimize_main.cc' object='fpoptimizer/libfparser_la-optimize_main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/libfparser_la-optimize_main.lo `test -f 'fpoptimizer/optimize_main.cc' || echo '$(srcdir)/'`fpoptimizer/optimize_main.cc

libfparser_la-fpoptimizer.lo: fpoptimizer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libfparser_la-fpoptimizer.lo -MD -MP -MF $(DEPDIR)/libfparser_la-fpoptimizer.Tpo -c -o libfparser_la-fpoptimizer.lo `test -f 'fpoptimizer.cc' || echo '$(srcdir)/'`fpoptimizer.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfparser_la-fpoptimizer.Tpo $(DEPDIR)/libfparser_la-fpoptimizer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer.cc' object='libfparser_la-fpoptimizer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfparser_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libfparser_la-fpoptimizer.lo `test -f 'fpoptimizer.cc' || echo '$(srcdir)/'`fpoptimizer.cc

util/util_bytecoderules_parser-bytecoderules_parser.o: util/bytecoderules_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_bytecoderules_parser_CXXFLAGS) $(CXXFLAGS) -MT util/util_bytecoderules_parser-bytecoderules_parser.o -MD -MP -MF util/$(DEPDIR)/util_bytecoderules_parser-bytecoderules_parser.Tpo -c -o util/util_bytecoderules_parser-bytecoderules_parser.o `test -f 'util/bytecoderules_parser.cc' || echo '$(srcdir)/'`util/bytecoderules_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_bytecoderules_parser-bytecoderules_parser.Tpo util/$(DEPDIR)/util_bytecoderules_parser-bytecoderules_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/bytecoderules_parser.cc' object='util/util_bytecoderules_parser-bytecoderules_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_bytecoderules_parser_CXXFLAGS) $(CXXFLAGS) -c -o util/util_bytecoderules_parser-bytecoderules_parser.o `test -f 'util/bytecoderules_parser.cc' || echo '$(srcdir)/'`util/bytecoderules_parser.cc

util/util_bytecoderules_parser-bytecoderules_parser.obj: util/bytecoderules_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_bytecoderules_parser_CXXFLAGS) $(CXXFLAGS) -MT util/util_bytecoderules_parser-bytecoderules_parser.obj -MD -MP -MF util/$(DEPDIR)/util_bytecoderules_parser-bytecoderules_parser.Tpo -c -o util/util_bytecoderules_parser-bytecoderules_parser.obj `if test -f 'util/bytecoderules_parser.cc'; then $(CYGPATH_W) 'util/bytecoderules_parser.cc'; else $(CYGPATH_W) '$(srcdir)/util/bytecoderules_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_bytecoderules_parser-bytecoderules_parser.Tpo util/$(DEPDIR)/util_bytecoderules_parser-bytecoderules_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/bytecoderules_parser.cc' object='util/util_bytecoderules_parser-bytecoderules_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_bytecoderules_parser_CXXFLAGS) $(CXXFLAGS) -c -o util/util_bytecoderules_parser-bytecoderules_parser.obj `if test -f 'util/bytecoderules_parser.cc'; then $(CYGPATH_W) 'util/bytecoderules_parser.cc'; else $(CYGPATH_W) '$(srcdir)/util/bytecoderules_parser.cc'; fi`

util/util_cpp_compress-cpp_compress.o: util/cpp_compress.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -MT util/util_cpp_compress-cpp_compress.o -MD -MP -MF util/$(DEPDIR)/util_cpp_compress-cpp_compress.Tpo -c -o util/util_cpp_compress-cpp_compress.o `test -f 'util/cpp_compress.cc' || echo '$(srcdir)/'`util/cpp_compress.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_cpp_compress-cpp_compress.Tpo util/$(DEPDIR)/util_cpp_compress-cpp_compress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/cpp_compress.cc' object='util/util_cpp_compress-cpp_compress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -c -o util/util_cpp_compress-cpp_compress.o `test -f 'util/cpp_compress.cc' || echo '$(srcdir)/'`util/cpp_compress.cc

util/util_cpp_compress-cpp_compress.obj: util/cpp_compress.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -MT util/util_cpp_compress-cpp_compress.obj -MD -MP -MF util/$(DEPDIR)/util_cpp_compress-cpp_compress.Tpo -c -o util/util_cpp_compress-cpp_compress.obj `if test -f 'util/cpp_compress.cc'; then $(CYGPATH_W) 'util/cpp_compress.cc'; else $(CYGPATH_W) '$(srcdir)/util/cpp_compress.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_cpp_compress-cpp_compress.Tpo util/$(DEPDIR)/util_cpp_compress-cpp_compress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/cpp_compress.cc' object='util/util_cpp_compress-cpp_compress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -c -o util/util_cpp_compress-cpp_compress.obj `if test -f 'util/cpp_compress.cc'; then $(CYGPATH_W) 'util/cpp_compress.cc'; else $(CYGPATH_W) '$(srcdir)/util/cpp_compress.cc'; fi`

util/util_cpp_compress-cpp_compress_main.o: util/cpp_compress_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -MT util/util_cpp_compress-cpp_compress_main.o -MD -MP -MF util/$(DEPDIR)/util_cpp_compress-cpp_compress_main.Tpo -c -o util/util_cpp_compress-cpp_compress_main.o `test -f 'util/cpp_compress_main.cc' || echo '$(srcdir)/'`util/cpp_compress_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_cpp_compress-cpp_compress_main.Tpo util/$(DEPDIR)/util_cpp_compress-cpp_compress_main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/cpp_compress_main.cc' object='util/util_cpp_compress-cpp_compress_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -c -o util/util_cpp_compress-cpp_compress_main.o `test -f 'util/cpp_compress_main.cc' || echo '$(srcdir)/'`util/cpp_compress_main.cc

util/util_cpp_compress-cpp_compress_main.obj: util/cpp_compress_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -MT util/util_cpp_compress-cpp_compress_main.obj -MD -MP -MF util/$(DEPDIR)/util_cpp_compress-cpp_compress_main.Tpo -c -o util/util_cpp_compress-cpp_compress_main.obj `if test -f 'util/cpp_compress_main.cc'; then $(CYGPATH_W) 'util/cpp_compress_main.cc'; else $(CYGPATH_W) '$(srcdir)/util/cpp_compress_main.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_cpp_compress-cpp_compress_main.Tpo util/$(DEPDIR)/util_cpp_compress-cpp_compress_main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/cpp_compress_main.cc' object='util/util_cpp_compress-cpp_compress_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_cpp_compress_CXXFLAGS) $(CXXFLAGS) -c -o util/util_cpp_compress-cpp_compress_main.obj `if test -f 'util/cpp_compress_main.cc'; then $(CYGPATH_W) 'util/cpp_compress_main.cc'; else $(CYGPATH_W) '$(srcdir)/util/cpp_compress_main.cc'; fi`

util/util_tree_grammar_parser-tree_grammar_parser.o: util/tree_grammar_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -MT util/util_tree_grammar_parser-tree_grammar_parser.o -MD -MP -MF util/$(DEPDIR)/util_tree_grammar_parser-tree_grammar_parser.Tpo -c -o util/util_tree_grammar_parser-tree_grammar_parser.o `test -f 'util/tree_grammar_parser.cc' || echo '$(srcdir)/'`util/tree_grammar_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_tree_grammar_parser-tree_grammar_parser.Tpo util/$(DEPDIR)/util_tree_grammar_parser-tree_grammar_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/tree_grammar_parser.cc' object='util/util_tree_grammar_parser-tree_grammar_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -c -o util/util_tree_grammar_parser-tree_grammar_parser.o `test -f 'util/tree_grammar_parser.cc' || echo '$(srcdir)/'`util/tree_grammar_parser.cc

util/util_tree_grammar_parser-tree_grammar_parser.obj: util/tree_grammar_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -MT util/util_tree_grammar_parser-tree_grammar_parser.obj -MD -MP -MF util/$(DEPDIR)/util_tree_grammar_parser-tree_grammar_parser.Tpo -c -o util/util_tree_grammar_parser-tree_grammar_parser.obj `if test -f 'util/tree_grammar_parser.cc'; then $(CYGPATH_W) 'util/tree_grammar_parser.cc'; else $(CYGPATH_W) '$(srcdir)/util/tree_grammar_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) util/$(DEPDIR)/util_tree_grammar_parser-tree_grammar_parser.Tpo util/$(DEPDIR)/util_tree_grammar_parser-tree_grammar_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='util/tree_grammar_parser.cc' object='util/util_tree_grammar_parser-tree_grammar_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -c -o util/util_tree_grammar_parser-tree_grammar_parser.obj `if test -f 'util/tree_grammar_parser.cc'; then $(CYGPATH_W) 'util/tree_grammar_parser.cc'; else $(CYGPATH_W) '$(srcdir)/util/tree_grammar_parser.cc'; fi`

fpoptimizer/util_tree_grammar_parser-opcodename.o: fpoptimizer/opcodename.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/util_tree_grammar_parser-opcodename.o -MD -MP -MF fpoptimizer/$(DEPDIR)/util_tree_grammar_parser-opcodename.Tpo -c -o fpoptimizer/util_tree_grammar_parser-opcodename.o `test -f 'fpoptimizer/opcodename.cc' || echo '$(srcdir)/'`fpoptimizer/opcodename.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/util_tree_grammar_parser-opcodename.Tpo fpoptimizer/$(DEPDIR)/util_tree_grammar_parser-opcodename.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/opcodename.cc' object='fpoptimizer/util_tree_grammar_parser-opcodename.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/util_tree_grammar_parser-opcodename.o `test -f 'fpoptimizer/opcodename.cc' || echo '$(srcdir)/'`fpoptimizer/opcodename.cc

fpoptimizer/util_tree_grammar_parser-opcodename.obj: fpoptimizer/opcodename.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -MT fpoptimizer/util_tree_grammar_parser-opcodename.obj -MD -MP -MF fpoptimizer/$(DEPDIR)/util_tree_grammar_parser-opcodename.Tpo -c -o fpoptimizer/util_tree_grammar_parser-opcodename.obj `if test -f 'fpoptimizer/opcodename.cc'; then $(CYGPATH_W) 'fpoptimizer/opcodename.cc'; else $(CYGPATH_W) '$(srcdir)/fpoptimizer/opcodename.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) fpoptimizer/$(DEPDIR)/util_tree_grammar_parser-opcodename.Tpo fpoptimizer/$(DEPDIR)/util_tree_grammar_parser-opcodename.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fpoptimizer/opcodename.cc' object='fpoptimizer/util_tree_grammar_parser-opcodename.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -c -o fpoptimizer/util_tree_grammar_parser-opcodename.obj `if test -f 'fpoptimizer/opcodename.cc'; then $(CYGPATH_W) 'fpoptimizer/opcodename.cc'; else $(CYGPATH_W) '$(srcdir)/fpoptimizer/opcodename.cc'; fi`

util_tree_grammar_parser-fparser.o: fparser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -MT util_tree_grammar_parser-fparser.o -MD -MP -MF $(DEPDIR)/util_tree_grammar_parser-fparser.Tpo -c -o util_tree_grammar_parser-fparser.o `test -f 'fparser.cc' || echo '$(srcdir)/'`fparser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/util_tree_grammar_parser-fparser.Tpo $(DEPDIR)/util_tree_grammar_parser-fparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fparser.cc' object='util_tree_grammar_parser-fparser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -c -o util_tree_grammar_parser-fparser.o `test -f 'fparser.cc' || echo '$(srcdir)/'`fparser.cc

util_tree_grammar_parser-fparser.obj: fparser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -MT util_tree_grammar_parser-fparser.obj -MD -MP -MF $(DEPDIR)/util_tree_grammar_parser-fparser.Tpo -c -o util_tree_grammar_parser-fparser.obj `if test -f 'fparser.cc'; then $(CYGPATH_W) 'fparser.cc'; else $(CYGPATH_W) '$(srcdir)/fparser.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/util_tree_grammar_parser-fparser.Tpo $(DEPDIR)/util_tree_grammar_parser-fparser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fparser.cc' object='util_tree_grammar_parser-fparser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(util_tree_grammar_parser_CXXFLAGS) $(CXXFLAGS) -c -o util_tree_grammar_parser-fparser.obj `if test -f 'fparser.cc'; then $(CYGPATH_W) 'fparser.cc'; else $(CYGPATH_W) '$(srcdir)/fparser.cc'; fi`

.yy.cc:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf fpoptimizer/.libs fpoptimizer/_libs
	-rm -rf util/.libs util/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(RECURSIVE_TARGETS) $(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done
cscopelist-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) cscopelist); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist: cscopelist-recursive $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f fpoptimizer/$(DEPDIR)/$(am__dirstamp)
	-rm -f fpoptimizer/$(am__dirstamp)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f util/tree_grammar_parser.cc
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) fpoptimizer/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) fpoptimizer/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-includeHEADERS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	cscopelist-recursive ctags-recursive install install-am \
	install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist \
	cscopelist-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-includeHEADERS


# fpoptimizer/grammar_data.cc is a generated source, and this rule specifies how we build it.
fpoptimizer/grammar_data.cc: \
		util/tree_grammar_parser \
		fpoptimizer/treerules.dat
	@echo "Parsing Grammar from "$(srcdir)/fpoptimizer/treerules.dat" using "$<" ..."
	@util/tree_grammar_parser < $(srcdir)/fpoptimizer/treerules.dat > $@

  # 'util/make_function_name_parser' is used to create extrasrc/fp_identifier_parser.inc,
  # but it seems to only define a snippet.  So for now we use the distributed version
  # of that file rather than treating it as a built source.
  # util_make_function_name_parser_SOURCES  = util/make_function_name_parser.cc util/cpp_compress.cc 

# extrasrc/fp_opcode_add.inc is a generated source, and this rule specifies how we build it.
@FPARSER_DEVEL_TRUE@extrasrc/fp_opcode_add.inc: \
@FPARSER_DEVEL_TRUE@		util/bytecoderules_parser \
@FPARSER_DEVEL_TRUE@		util/bytecoderules.dat \
@FPARSER_DEVEL_TRUE@		util/bytecoderules_header.txt \
@FPARSER_DEVEL_TRUE@		util/cpp_compress
@FPARSER_DEVEL_TRUE@	@echo "Creating system-specific Bytecode in "$@" ..."
@FPARSER_DEVEL_TRUE@	@$(MKDIR_P) extrasrc
@FPARSER_DEVEL_TRUE@	@cat $(srcdir)/util/bytecoderules_header.txt > $@
@FPARSER_DEVEL_TRUE@	@util/bytecoderules_parser \
@FPARSER_DEVEL_TRUE@		< $(srcdir)/util/bytecoderules.dat \
@FPARSER_DEVEL_TRUE@		| util/cpp_compress \
@FPARSER_DEVEL_TRUE@		>> $@

@FPARSER_DEVEL_TRUE@  # Build up utility programs used to define parsing, not needed
@FPARSER_DEVEL_TRUE@  # for installation
@FPARSER_DEVEL_TRUE@  # noinst_PROGRAMS           += util/make_function_name_parser

@FPARSER_DEVEL_TRUE@fparser.cc: extrasrc/fp_opcode_add.inc

@FPARSER_DEVEL_TRUE@   # when doing 'make clean' we need to remove the generated sources

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
