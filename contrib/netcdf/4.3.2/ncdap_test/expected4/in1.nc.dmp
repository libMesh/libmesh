netcdf in1 {
types:
  compound lat_var_t {
    float lat_var(2) ;
    float lat(2) ;
  }; // lat_var_t
  compound lat_wgt_t {
    float lat_wgt(2) ;
    float lat(2) ;
  }; // lat_wgt_t
  compound hyam_t {
    float hyam(3) ;
    float lev(3) ;
  }; // hyam_t
  compound hybm_t {
    float hybm(3) ;
    float lev(3) ;
  }; // hybm_t
  compound PS_t {
    float PS(10, 2, 4) ;
    double time(10) ;
    float lat(2) ;
    float lon(4) ;
  }; // PS_t
  compound date_t {
    int date(10) ;
    double time(10) ;
  }; // date_t
  compound lon_wgt_t {
    float lon_wgt(4) ;
    float lon(4) ;
  }; // lon_wgt_t
  compound msk_prt_mss_prt_t {
    float msk_prt_mss_prt(4) ;
    float lon(4) ;
  }; // msk_prt_mss_prt_t
  compound mss_val_t {
    float mss_val(4) ;
    float lon(4) ;
  }; // mss_val_t
  compound mss_val_fst_t {
    float mss_val_fst(4) ;
    float lon(4) ;
  }; // mss_val_fst_t
  compound fll_val_t {
    float fll_val(4) ;
    float lon(4) ;
  }; // fll_val_t
  compound no_mss_val_t {
    float no_mss_val(4) ;
    float lon(4) ;
  }; // no_mss_val_t
  compound val_one_mss_t {
    float val_one_mss(2) ;
    float lat(2) ;
  }; // val_one_mss_t
  compound pck_arr_t {
    short pck_arr(4) ;
    float lon(4) ;
  }; // pck_arr_t
  compound upk_arr_t {
    double upk_arr(4) ;
    float lon(4) ;
  }; // upk_arr_t
  compound val_one_one_int_t {
    int val_one_one_int(2) ;
    float lat(2) ;
  }; // val_one_one_int_t
  compound val_max_max_sht_t {
    short val_max_max_sht(2) ;
    float lat(2) ;
  }; // val_max_max_sht_t
  compound val_one_mss_int_t {
    int val_one_mss_int(2) ;
    float lat(2) ;
  }; // val_one_mss_int_t
  compound val_half_half_t {
    float val_half_half(2) ;
    float lat(2) ;
  }; // val_half_half_t
  compound wgt_one_t {
    float wgt_one(2) ;
    float lat(2) ;
  }; // wgt_one_t
  compound mss_val_all_t {
    float mss_val_all(4) ;
    float lon(4) ;
  }; // mss_val_all_t
  compound char_var_multinul_t {
    string char_var_multinul(3) ;
    float lev(3) ;
  }; // char_var_multinul_t
  compound lev_var_t {
    float lev_var(3) ;
    float lev(3) ;
  }; // lev_var_t
  compound lev_wgt_t {
    float lev_wgt(3) ;
    float lev(3) ;
  }; // lev_wgt_t
  compound z_t {
    float z(3) ;
    float lev(3) ;
  }; // z_t
  compound rz_t {
    float rz(3) ;
    float rlev(3) ;
  }; // rz_t
  compound one_dmn_int_val_one_t {
    int one_dmn_int_val_one(2) ;
    float lat(2) ;
  }; // one_dmn_int_val_one_t
  compound one_dmn_int_val_two_t {
    int one_dmn_int_val_two(2) ;
    float lat(2) ;
  }; // one_dmn_int_val_two_t
  compound three_dmn_var_t {
    float three_dmn_var(2, 3, 4) ;
    float lat(2) ;
    float lev(3) ;
    float lon(4) ;
  }; // three_dmn_var_t
  compound three_dmn_var_crd_t {
    float three_dmn_var_crd(3, 2, 4) ;
    float lev(3) ;
    float lat(2) ;
    float lon(4) ;
  }; // three_dmn_var_crd_t
  compound prs_sfc_t {
    float prs_sfc(10, 2, 4) ;
    double time(10) ;
    float lat(2) ;
    float lon(4) ;
  }; // prs_sfc_t
  compound two_dmn_var_t {
    float two_dmn_var(2, 3) ;
    float lat(2) ;
    float lev(3) ;
  }; // two_dmn_var_t
  compound mask_t {
    float mask(2, 4) ;
    float lat(2) ;
    float lon(4) ;
  }; // mask_t
  compound ORO_t {
    float ORO(2, 4) ;
    float lat(2) ;
    float lon(4) ;
  }; // ORO_t
  compound weight_t {
    float weight(2) ;
    float lat(2) ;
  }; // weight_t
  compound gw_t {
    float gw(2) ;
    float lat(2) ;
  }; // gw_t
  compound gw_T42_t {
    float gw_T42(64) ;
    float lat_T42(64) ;
  }; // gw_T42_t
  compound rec_var_flt_t {
    float rec_var_flt(10) ;
    double time(10) ;
  }; // rec_var_flt_t
  compound rec_var_dbl_t {
    double rec_var_dbl(10) ;
    double time(10) ;
  }; // rec_var_dbl_t
  compound one_dmn_rec_var_t {
    int one_dmn_rec_var(10) ;
    double time(10) ;
  }; // one_dmn_rec_var_t
  compound tpt_t {
    float tpt(10) ;
    double time(10) ;
  }; // tpt_t
  compound rec_var_dbl_mss_val_dbl_upk_t {
    double rec_var_dbl_mss_val_dbl_upk(10) ;
    double time(10) ;
  }; // rec_var_dbl_mss_val_dbl_upk_t
  compound rec_var_dbl_mss_val_dbl_pck_t {
    short rec_var_dbl_mss_val_dbl_pck(10) ;
    double time(10) ;
  }; // rec_var_dbl_mss_val_dbl_pck_t
  compound rec_var_flt_mss_val_flt_t {
    float rec_var_flt_mss_val_flt(10) ;
    double time(10) ;
  }; // rec_var_flt_mss_val_flt_t
  compound rec_var_flt_pck_t {
    short rec_var_flt_pck(10) ;
    double time(10) ;
  }; // rec_var_flt_pck_t
  compound rec_var_dbl_pck_t {
    short rec_var_dbl_pck(10) ;
    double time(10) ;
  }; // rec_var_dbl_pck_t
  compound rec_var_flt_mss_val_dbl_t {
    float rec_var_flt_mss_val_dbl(10) ;
    double time(10) ;
  }; // rec_var_flt_mss_val_dbl_t
  compound rec_var_flt_mss_val_int_t {
    float rec_var_flt_mss_val_int(10) ;
    double time(10) ;
  }; // rec_var_flt_mss_val_int_t
  compound rec_var_int_mss_val_int_t {
    int rec_var_int_mss_val_int(10) ;
    double time(10) ;
  }; // rec_var_int_mss_val_int_t
  compound rec_var_int_mss_val_flt_t {
    int rec_var_int_mss_val_flt(10) ;
    double time(10) ;
  }; // rec_var_int_mss_val_flt_t
  compound rec_var_int_mss_val_dbl_t {
    int rec_var_int_mss_val_dbl(10) ;
    double time(10) ;
  }; // rec_var_int_mss_val_dbl_t
  compound rec_var_dbl_mss_val_dbl_pck_lng_t {
    int rec_var_dbl_mss_val_dbl_pck_lng(10) ;
    double time(10) ;
  }; // rec_var_dbl_mss_val_dbl_pck_lng_t
  compound one_dmn_rec_var_sng_t {
    string one_dmn_rec_var_sng(10) ;
    double time(10) ;
  }; // one_dmn_rec_var_sng_t
  compound time_lon_t {
    float time_lon(10, 4) ;
    double time(10) ;
    float lon(4) ;
  }; // time_lon_t
  compound two_dmn_rec_var_sng_t {
    string two_dmn_rec_var_sng(10, 3) ;
    double time(10) ;
    float lev(3) ;
  }; // two_dmn_rec_var_sng_t
  compound two_dmn_rec_var_t {
    float two_dmn_rec_var(10, 3) ;
    double time(10) ;
    float lev(3) ;
  }; // two_dmn_rec_var_t
  compound three_dmn_rec_var_t {
    float three_dmn_rec_var(10, 2, 4) ;
    double time(10) ;
    float lat(2) ;
    float lon(4) ;
  }; // three_dmn_rec_var_t
  compound three_dmn_var_dbl_t {
    double three_dmn_var_dbl(10, 2, 4) ;
    double time(10) ;
    float lat(2) ;
    float lon(4) ;
  }; // three_dmn_var_dbl_t
  compound three_dmn_var_int_t {
    int three_dmn_var_int(10, 2, 4) ;
    double time(10) ;
    float lat(2) ;
    float lon(4) ;
  }; // three_dmn_var_int_t
  compound three_dmn_var_sht_t {
    short three_dmn_var_sht(10, 2, 4) ;
    double time(10) ;
    float lat(2) ;
    float lon(4) ;
  }; // three_dmn_var_sht_t
  compound tx_t {
    float tx(10, 4) ;
    double time(10) ;
    float lon(4) ;
  }; // tx_t
  compound ty_t {
    float ty(10, 2) ;
    double time(10) ;
    float lat(2) ;
  }; // ty_t
  compound tz_t {
    float tz(10, 3) ;
    double time(10) ;
    float lev(3) ;
  }; // tz_t
  compound txyz_t {
    float txyz(10, 4, 2, 3) ;
    double time(10) ;
    float lon(4) ;
    float lat(2) ;
    float lev(3) ;
  }; // txyz_t
  compound four_dmn_rec_var_t {
    float four_dmn_rec_var(10, 2, 3, 4) ;
    double time(10) ;
    float lat(2) ;
    float lev(3) ;
    float lon(4) ;
  }; // four_dmn_rec_var_t
  compound u_t {
    float u(10) ;
    double time(10) ;
  }; // u_t
  compound v_t {
    float v(10) ;
    double time(10) ;
  }; // v_t
dimensions:
	bnd = 2 ;
	char_dmn_lng = 80 ;
	char_dmn_sml = 4 ;
	dgn = 1 ;
	fl_dmn = 3 ;
	lat = 2 ;
	lat_T42 = 64 ;
	lev = 3 ;
	lon = 4 ;
	lon_T42 = 128 ;
	lsmlev = 6 ;
	rlev = 3 ;
	time = 10 ;
	time_udunits = 3 ;
	wvl = 2 ;
variables:
	float lat(lat) ;
		string lat:long_name = "Latitude" ;
		string lat:units = "degrees_north" ;
	lat_var_t lat_var ;
	lat_wgt_t lat_wgt ;
	float lon_T42(lon_T42) ;
	float lat_T42(lat_T42) ;
	float lev(lev) ;
		string lev:purpose = "Monotonically increasing coordinate pressure" ;
		string lev:units = "hybrid_sigma_pressure" ;
		string lev:positive = "down" ;
		string lev:A_var = "hyam" ;
		string lev:B_var = "hybm" ;
		string lev:P0_var = "P0" ;
		string lev:PS_var = "PS" ;
		string lev:bounds = "ilev" ;
	float rlev(rlev) ;
		string rlev:purpose = "Monotonically decreasing coordinate pressure" ;
	float lon(lon) ;
		string lon:long_name = "Latitude" ;
		string lon:units = "degrees_north" ;
	double time(time) ;
	float lsmlev(lsmlev) ;
		string lsmlev:purpose = "Homebrew level coordinate for LSM" ;
		string lsmlev:long_name = "Soil depth" ;
		string lsmlev:units = "meter" ;
	float wvl(wvl) ;
		string wvl:long_name = "Wavelength" ;
		string wvl:units = "meter" ;
	hyam_t hyam ;
	hybm_t hybm ;
	float P0 ;
		string P0:long_name = "reference pressure" ;
		string P0:units = "pascal" ;
	PS_t PS ;
	string fl_dmn(fl_dmn) ;
		string fl_dmn:long_name = "Character coordinate" ;
		string fl_dmn:units = "[chr]" ;
	int nbdate ;
		string nbdate:long_name = "base date as 6 or 8 digit integer (YYMMDD or YYYYMMDD)" ;
	date_t date ;
	lon_wgt_t lon_wgt ;
	msk_prt_mss_prt_t msk_prt_mss_prt ;
	mss_val_t mss_val ;
	float mss_val_scl ;
		string mss_val_scl:long_name = "scalar missing value" ;
		mss_val_scl:missing_value = 1.e+36f ;
	mss_val_fst_t mss_val_fst ;
	fll_val_t fll_val ;
	no_mss_val_t no_mss_val ;
	val_one_mss_t val_one_mss ;
	short pck ;
		string pck:long_name = "Packed scalar variable" ;
		string pck:note = "Original packed value was 1s with scale_factor = 2.0d and add_offset = 1.0d. Unpacked value should be 3.0 = 2.0d*1s + 1.0d. NCO algorithms would pack this variable as scale_factor = 0.0d and add_offset = 3.0d." ;
		pck:scale_factor = 2. ;
		pck:add_offset = 1. ;
	pck_arr_t pck_arr ;
	double upk ;
		string upk:long_name = "Unpacked scalar variable" ;
		string upk:note = "Unpacked value is 3.0d0, upk=unpack(pck)= 2.0d0*1s + 1.0d0 = 3.0d0. Packing this variable should create an NC_SHORT scalar = 0s with packing attribute add_offset=3.0d and either no scale_factor (ncap) or scale_factor = 0.0d (ncpdq)." ;
	upk_arr_t upk_arr ;
	int val_one_int ;
		string val_one_int:long_name = "scalar equal to 1" ;
		val_one_int:missing_value = -99 ;
	val_one_one_int_t val_one_one_int ;
	val_max_max_sht_t val_max_max_sht ;
	val_one_mss_int_t val_one_mss_int ;
	float val_half ;
		string val_half:long_name = "Scalar with value 0.5" ;
		val_half:missing_value = 1.e+36f ;
	val_half_half_t val_half_half ;
	wgt_one_t wgt_one ;
	mss_val_all_t mss_val_all ;
	float scalar_var ;
		string scalar_var:long_name = "scalar variable" ;
		string scalar_var:units = "Fraction" ;
	float float_var ;
		string float_var:long_name = "float" ;
	double double_var ;
		string double_var:long_name = "double" ;
	double double_var2 ;
		string double_var2:long_name = "double" ;
		double_var2:missing_value = 1.e+36 ;
	int int_var ;
		string int_var:long_name = "int" ;
	short short_var ;
		string short_var:long_name = "short" ;
	string char_var ;
		string char_var:long_name = "char" ;
	string char_var_space ;
		string char_var_space:long_name = "Character variable with whitespace on ends" ;
	string char_var_nul ;
		string char_var_nul:long_name = "Character variable containing one NUL" ;
	char_var_multinul_t char_var_multinul ;
	string fl_nm(char_dmn_lng) ;
		string fl_nm:long_name = "Variable contains a file name" ;
	string fl_nm_arr(fl_dmn, char_dmn_lng) ;
		string fl_nm_arr:long_name = "Variable that contains a short array of file names" ;
		string fl_nm_arr:units = "[sng]" ;
	string non_nul_trm_char_one_dmn(char_dmn_sml) ;
		string non_nul_trm_char_one_dmn:long_name = "Variable contains a one-dimensional array of characters that is not NUL-terminated" ;
		string non_nul_trm_char_one_dmn:units = "[chr]" ;
	string non_nul_trm_char_two_dmn(fl_dmn, char_dmn_sml) ;
		string non_nul_trm_char_two_dmn:long_name = "Variable contains a two-dimensional array of characters that are not NUL-terminated" ;
		string non_nul_trm_char_two_dmn:units = "[chr]" ;
	ubyte byte_var ;
		string byte_var:long_name = "byte" ;
	ubyte byte_var_neg ;
		string byte_var_neg:long_name = "negative byte" ;
	float zero ;
		string zero:long_name = "zero" ;
	float one ;
		string one:long_name = "one" ;
	float two ;
		string two:long_name = "two" ;
	double e_dbl ;
		string e_dbl:long_name = "e, natural logarithm base" ;
	float e_flt ;
		string e_flt:long_name = "e, natural logarithm base" ;
	float three ;
		string three:long_name = "three" ;
	float four ;
		string four:long_name = "four" ;
	float negative_one ;
		string negative_one:long_name = "negative one" ;
	lev_var_t lev_var ;
	lev_wgt_t lev_wgt ;
	float g ;
		string g:long_name = "g" ;
	z_t z ;
	rz_t rz ;
	float one_dmn_var(bnd) ;
	one_dmn_int_val_one_t one_dmn_int_val_one ;
	one_dmn_int_val_two_t one_dmn_int_val_two ;
	float att_var ;
		att_var:byte_att = 0UB ;
		string att_var:char_att = "Sentence one.\\012Sentence two.\\012" ;
		att_var:short_att = 37s ;
		att_var:int_att = 73 ;
		att_var:float_att = 73.f, 72.f, 71.f ;
		att_var:double_att = 73. ;
	int bnd_var(lev, bnd) ;
		bnd_var:byte_att = 0UB ;
		string bnd_var:char_att = "Sentence one.\\012Sentence two.\\012" ;
		bnd_var:short_att = 37s ;
		bnd_var:int_att = 73 ;
		bnd_var:float_att = 73.f ;
		bnd_var:double_att = 73. ;
	three_dmn_var_t three_dmn_var ;
	three_dmn_var_crd_t three_dmn_var_crd ;
	prs_sfc_t prs_sfc ;
	two_dmn_var_t two_dmn_var ;
	mask_t mask ;
	ORO_t ORO ;
	weight_t weight ;
	gw_t gw ;
	gw_T42_t gw_T42 ;
	rec_var_flt_t rec_var_flt ;
	rec_var_dbl_t rec_var_dbl ;
	one_dmn_rec_var_t one_dmn_rec_var ;
	tpt_t tpt ;
	rec_var_dbl_mss_val_dbl_upk_t rec_var_dbl_mss_val_dbl_upk ;
	rec_var_dbl_mss_val_dbl_pck_t rec_var_dbl_mss_val_dbl_pck ;
	rec_var_flt_mss_val_flt_t rec_var_flt_mss_val_flt ;
	rec_var_flt_pck_t rec_var_flt_pck ;
	rec_var_dbl_pck_t rec_var_dbl_pck ;
	rec_var_flt_mss_val_dbl_t rec_var_flt_mss_val_dbl ;
	rec_var_flt_mss_val_int_t rec_var_flt_mss_val_int ;
	rec_var_int_mss_val_int_t rec_var_int_mss_val_int ;
	rec_var_int_mss_val_flt_t rec_var_int_mss_val_flt ;
	rec_var_int_mss_val_dbl_t rec_var_int_mss_val_dbl ;
	rec_var_dbl_mss_val_dbl_pck_lng_t rec_var_dbl_mss_val_dbl_pck_lng ;
	one_dmn_rec_var_sng_t one_dmn_rec_var_sng ;
	time_lon_t time_lon ;
	two_dmn_rec_var_sng_t two_dmn_rec_var_sng ;
	two_dmn_rec_var_t two_dmn_rec_var ;
	three_dmn_rec_var_t three_dmn_rec_var ;
	three_dmn_var_dbl_t three_dmn_var_dbl ;
	three_dmn_var_int_t three_dmn_var_int ;
	three_dmn_var_sht_t three_dmn_var_sht ;
	float td(time, dgn) ;
		string td:long_name = "two dimensional record variable stored in td (time,dgn) order (dgn means degenerate, i.e., of size 1)" ;
	tx_t tx ;
	ty_t ty ;
	tz_t tz ;
	txyz_t txyz ;
	four_dmn_rec_var_t four_dmn_rec_var ;
	double time_udunits(time_udunits) ;
		string time_udunits:units = "hours since 1900-01-01 00:00:0.0" ;
		string time_udunits:delta_t = "0000-00-00 06:00:0.0" ;
	u_t u ;
	v_t v ;

// global attributes:
		string :Conventions = "NCAR-CSM" ;
		string :history = "History global attribute.\\012" ;
		:julian_day = 200000.04 ;
data:

 lat = -90, 90 ;

 lat_var = {{1, 2}, {-90, 90}} ;

 lat_wgt = {{1, 2}, {-90, 90}} ;

 lon_T42 = 0, 2.8125, 5.625, 8.4375, 11.25, 14.0625, 16.875, 19.6875, 22.5, 
    25.3125, 28.125, 30.9375, 33.75, 36.5625, 39.375, 42.1875, 45, 47.8125, 
    50.625, 53.4375, 56.25, 59.0625, 61.875, 64.6875, 67.5, 70.3125, 73.125, 
    75.9375, 78.75, 81.5625, 84.375, 87.1875, 90, 92.8125, 95.625, 98.4375, 
    101.25, 104.0625, 106.875, 109.6875, 112.5, 115.3125, 118.125, 120.9375, 
    123.75, 126.5625, 129.375, 132.1875, 135, 137.8125, 140.625, 143.4375, 
    146.25, 149.0625, 151.875, 154.6875, 157.5, 160.3125, 163.125, 165.9375, 
    168.75, 171.5625, 174.375, 177.1875, 180, 182.8125, 185.625, 188.4375, 
    191.25, 194.0625, 196.875, 199.6875, 202.5, 205.3125, 208.125, 210.9375, 
    213.75, 216.5625, 219.375, 222.1875, 225, 227.8125, 230.625, 233.4375, 
    236.25, 239.0625, 241.875, 244.6875, 247.5, 250.3125, 253.125, 255.9375, 
    258.75, 261.5625, 264.375, 267.1875, 270, 272.8125, 275.625, 278.4375, 
    281.25, 284.0625, 286.875, 289.6875, 292.5, 295.3125, 298.125, 300.9375, 
    303.75, 306.5625, 309.375, 312.1875, 315, 317.8125, 320.625, 323.4375, 
    326.25, 329.0625, 331.875, 334.6875, 337.5, 340.3125, 343.125, 345.9375, 
    348.75, 351.5625, 354.375, 357.1875 ;

 lat_T42 = -88.24009, -85.09245, -82.31198, -79.52525, -76.73673, -73.94742, 
    -71.1577, -68.36772, -65.57758, -62.78733, -59.99701, -57.20662, 
    -54.41619, -51.62573, -48.83524, -46.04472, -43.25419, -40.46365, 
    -37.67309, -34.88252, -32.09194, -29.30136, -26.51077, -23.72017, 
    -20.92957, -18.13897, -15.34836, -12.55776, -9.767145, -6.976533, 
    -4.185921, -1.395307, 1.395307, 4.185921, 6.976533, 9.767145, 12.55776, 
    15.34836, 18.13897, 20.92957, 23.72017, 26.51077, 29.30136, 32.09194, 
    34.88252, 37.67309, 40.46365, 43.25419, 46.04472, 48.83524, 51.62573, 
    54.41619, 57.20662, 59.99701, 62.78733, 65.57758, 68.36772, 71.1577, 
    73.94742, 76.73673, 79.52525, 82.31198, 85.09245, 88.24009 ;

 lev = 100, 500, 1000 ;

 rlev = 1000, 500, 100 ;

 lon = 0, 90, 180, 270 ;

 time = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ;

 lsmlev = 0.05, 0.1, 0.2, 0.5, 1, 3 ;

 wvl = 5e-07, 1e-06 ;

 hyam = {{0.0802583, 0.0438226, 0}, {100, 500, 1000}} ;

 hybm = {{0.0187849, 0.457453, 0.992528}, {100, 500, 1000}} ;

 P0 = 100000 ;

 PS = 
    {{}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}, {0, 90, 180, 270}} ;

 fl_dmn = "a", "b", "3" ;

 nbdate = 640312 ;

 date = 
    {{640312, 640313, 640314, 640315, 640316, 640317, 640318, 640319, 640320, 640321}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 lon_wgt = {{0.347855, 0.652145, 0.652145, 0.347855}, {0, 90, 180, 270}} ;

 msk_prt_mss_prt = {{0.5, 1e+36, 1.5, 1e+36}, {0, 90, 180, 270}} ;

 mss_val = {{73, 1e+36, 73, 1e+36}, {0, 90, 180, 270}} ;

 mss_val_scl = 1e+36 ;

 mss_val_fst = {{-999, 73, -999, 73}, {0, 90, 180, 270}} ;

 fll_val = {{73, -999, 73, -999}, {0, 90, 180, 270}} ;

 no_mss_val = {{73, 1e+36, 73, 1e+36}, {0, 90, 180, 270}} ;

 val_one_mss = {{1, 1e+36}, {-90, 90}} ;

 pck = 1 ;

 pck_arr = {{-32767, 0, 1, 32767}, {0, 90, 180, 270}} ;

 upk = 3 ;

 upk_arr = {{-32767, 0, 1, 32767}, {0, 90, 180, 270}} ;

 val_one_int = 1 ;

 val_one_one_int = {{1, 1}, {-90, 90}} ;

 val_max_max_sht = {{17000, 17000}, {-90, 90}} ;

 val_one_mss_int = {{1, -99}, {-90, 90}} ;

 val_half = 0.5 ;

 val_half_half = {{0.5, 0.5}, {-90, 90}} ;

 wgt_one = {{1, 1}, {-90, 90}} ;

 mss_val_all = {{1e+36, 1e+36, 1e+36, 1e+36}, {0, 90, 180, 270}} ;

 scalar_var = 10 ;

 float_var = 10 ;

 double_var = 10 ;

 double_var2 = 10 ;

 int_var = 10 ;

 short_var = 10 ;

 char_var = "z" ;

 char_var_space = " " ;

 char_var_nul = _ ;

 char_var_multinul = {{"", "
", ""}, {100, 500, 1000}} ;

 fl_nm = "/", "h", "o", "m", "e", "/", "z", "e", "n", "d", "e", "r", "/", 
    "n", "c", "o", "/", "d", "a", "t", "a", "/", "i", "n", ".", "c", "d", 
    "l", _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
    _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
    _, _, _, _, _ ;

 fl_nm_arr =
  "/", "d", "a", "t", "a", "/", "z", "e", "n", "d", "e", "r", "/", "d", "s", 
    "t", "c", "c", "m", "0", "4", "/", "d", "s", "t", "c", "c", "m", "0", 
    "4", "_", "8", "5", "8", "9", "_", "0", "1", ".", "n", "c", _, _, _, _, 
    _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
    _, _, _, _, _, _, _, _, _, _, _,
  "/", "d", "a", "t", "a", "/", "z", "e", "n", "d", "e", "r", "/", "d", "s", 
    "t", "c", "c", "m", "0", "4", "/", "d", "s", "t", "c", "c", "m", "0", 
    "4", "_", "8", "5", "8", "9", "_", "0", "2", ".", "n", "c", _, _, _, _, 
    _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
    _, _, _, _, _, _, _, _, _, _, _,
  "/", "d", "a", "t", "a", "/", "z", "e", "n", "d", "e", "r", "/", "d", "s", 
    "t", "c", "c", "m", "0", "4", "/", "d", "s", "t", "c", "c", "m", "0", 
    "4", "_", "8", "5", "8", "9", "_", "0", "3", ".", "n", "c", _, _, _, _, 
    _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
    _, _, _, _, _, _, _, _, _, _, _ ;

 non_nul_trm_char_one_dmn = "a", "b", _, _ ;

 non_nul_trm_char_two_dmn =
  "a", "b", "c", "d",
  "e", "f", "g", "h",
  "i", "j", "k", "m" ;

 byte_var = 122 ;

 byte_var_neg = 134 ;

 zero = 0 ;

 one = 1 ;

 two = 2 ;

 e_dbl = 2.71828182846 ;

 e_flt = 2.718282 ;

 three = 3 ;

 four = 4 ;

 negative_one = -1 ;

 lev_var = {{100, 500, 1000}, {100, 500, 1000}} ;

 lev_wgt = {{10, 2, 1}, {100, 500, 1000}} ;

 g = 9.8 ;

 z = {{17000, 5000, 0}, {100, 500, 1000}} ;

 rz = {{0, 5000, 17000}, {1000, 500, 100}} ;

 one_dmn_var = 1, 10 ;

 one_dmn_int_val_one = {{1, 1}, {-90, 90}} ;

 one_dmn_int_val_two = {{2, 2}, {-90, 90}} ;

 att_var = 10 ;

 bnd_var =
  1, 2,
  3, 4,
  5, 6 ;

 three_dmn_var = 
    {{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}, {-90, 90}, {100, 500, 1000}, {0, 90, 180, 270}} ;

 three_dmn_var_crd = 
    {{0, 1, 2, 3, 12, 13, 14, 15, 4, 5, 6, 7, 16, 17, 18, 19, 8, 9, 10, 11, 20, 21, 22, 23}, {100, 500, 1000}, {-90, 90}, {0, 90, 180, 270}} ;

 prs_sfc = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}, {0, 90, 180, 270}} ;

 two_dmn_var = 
    {{1.5, 5.5, 9.5, 13.5, 17.5, 21.5}, {-90, 90}, {100, 500, 1000}} ;

 mask = {{0, 1, 0, 0, 1, 1, 0, 2}, {-90, 90}, {0, 90, 180, 270}} ;

 ORO = {{1, 1, 1, 1, 1, 1, 1, 1}, {-90, 90}, {0, 90, 180, 270}} ;

 weight = {{10, 10}, {-90, 90}} ;

 gw = {{10, 10}, {-90, 90}} ;

 gw_T42 = 
    {{-87.8638, -85.09653, -82.31291, -79.5256, -76.7369, -73.94752, -71.15775, -68.36776, -65.57761, -62.78735, -59.99702, -57.20663, -54.4162, -51.62573, -48.83524, -46.04473, -43.2542, -40.46365, -37.67309, -34.88252, -32.09195, -29.30136, -26.51077, -23.72017, -20.92957, -18.13897, -15.34836, -12.55776, -9.767146, -6.976534, -4.185921, -1.395307, 1.395307, 4.185921, 6.976534, 9.767146, 12.55776, 15.34836, 18.13897, 20.92957, 23.72017, 26.51077, 29.30136, 32.09195, 34.88252, 37.67309, 40.46365, 43.2542, 46.04473, 48.83524, 51.62573, 54.4162, 57.20663, 59.99702, 62.78735, 65.57761, 68.36776, 71.15775, 73.94752, 76.7369, 79.5256, 82.31291, 85.09653, 87.8638}, {-88.24009, -85.09245, -82.31198, -79.52525, -76.73673, -73.94742, -71.1577, -68.36772, -65.57758, -62.78733, -59.99701, -57.20662, -54.41619, -51.62573, -48.83524, -46.04472, -43.25419, -40.46365, -37.67309, -34.88252, -32.09194, -29.30136, -26.51077, -23.72017, -20.92957, -18.13897, -15.34836, -12.55776, -9.767145, -6.976533, -4.185921, -1.395307, 1.395307, 4.185921, 6.976533, 9.767145, 12.55776, 15.34836, 18.13897, 20.92957, 23.72017, 26.51077, 29.30136, 32.09194, 34.88252, 37.67309, 40.46365, 43.25419, 46.04472, 48.83524, 51.62573, 54.41619, 57.20662, 59.99701, 62.78733, 65.57758, 68.36772, 71.1577, 73.94742, 76.73673, 79.52525, 82.31198, 85.09245, 88.24009}} ;

 rec_var_flt = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_dbl = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 one_dmn_rec_var = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 tpt = 
    {{273.1, 273.2, 273.3, 273.4, 273.5, 273.6, 273.7, 273.8, 273.9, 274}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_dbl_mss_val_dbl_upk = 
    {{-999, 2, 3, 4, 5, 6, 7, 8, -999, -999}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_dbl_mss_val_dbl_pck = 
    {{-999, 32767, 21845, 10922, 0, -10922, -21845, -32767, -999, -999}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_flt_mss_val_flt = 
    {{1e+36, 2, 3, 4, 5, 6, 7, 8, 1e+36, 1e+36}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_flt_pck = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_dbl_pck = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_flt_mss_val_dbl = 
    {{1e+36, 2, 3, 4, 5, 6, 7, 8, 1e+36, 1e+36}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_flt_mss_val_int = 
    {{-999, 2, 3, 4, 5, 6, 7, 8, -999, -999}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_int_mss_val_int = 
    {{-999, 2, 3, 4, 5, 6, 7, 8, -999, -999}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_int_mss_val_flt = 
    {{-999, 2, 3, 4, 5, 6, 7, 8, -999, -999}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_int_mss_val_dbl = 
    {{-999, 2, 3, 4, 5, 6, 7, 8, -999, -999}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 rec_var_dbl_mss_val_dbl_pck_lng = 
    {{-999, 32767, 21845, 10922, 0, -10922, -21845, -32767, -999, -999}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 one_dmn_rec_var_sng = 
    {{"H", "e", "l", "l", "o", " ", "W", "o", "r", ""}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 time_lon = 
    {{0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270, 0, 90, 180, 270}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {0, 90, 180, 270}} ;

 two_dmn_rec_var_sng = 
    {{"a", "b", "c", "b", "c", "d", "c", "d", "e", "d", "e", "f", "e", "f", "g", "f", "g", "h", "g", "h", "i", "h", "i", "j", "j", "k", "l", "k", "l", "m"}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {100, 500, 1000}} ;

 two_dmn_rec_var = 
    {{1, 2, 3, 1, 2.1, 3, 1, 2.2, 3, 1, 2.3, 3, 1, 2.4, 3, 1, 2.5, 3, 1, 2.6, 3, 1, 2.7, 3, 1, 2.8, 3, 1, 2.9, 3}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {100, 500, 1000}} ;

 three_dmn_rec_var = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}, {0, 90, 180, 270}} ;

 three_dmn_var_dbl = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, -99, -99, -99, -99, -99, -99, -99, -99, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, -99, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, -99, 74, 75, 76, 77, 78, 79, -99}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}, {0, 90, 180, 270}} ;

 three_dmn_var_int = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, -99, -99, -99, -99, -99, -99, -99, -99, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, -99, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, -99, 58, 59, 60, -99, 62, 63, 64, 65, -99, 67, 68, 69, 70, 71, 72, -99, 74, 75, -99, 77, 78, 79, 80}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}, {0, 90, 180, 270}} ;

 three_dmn_var_sht = 
    {{1, 2, 3, 4, 5, 6, 7, 8, -99, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, -99, 34, 35, -99, 37, 38, 39, 40, 41, 42, 43, 44, -99, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, -99, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, -99, -99, -99, -99, -99, -99, -99, -99}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}, {0, 90, 180, 270}} ;

 td =
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10 ;

 tx = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {0, 90, 180, 270}} ;

 ty = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}} ;

 tz = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {100, 500, 1000}} ;

 txyz = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {0, 90, 180, 270}, {-90, 90}, {100, 500, 1000}} ;

 four_dmn_rec_var = 
    {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {-90, 90}, {100, 500, 1000}, {0, 90, 180, 270}} ;

 time_udunits = 876012, 876018, 876024 ;

 u = {{1, 0, 1, 0, 1, 0, 1, 0, 1, 0}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;

 v = {{0, 1, 0, 1, 0, 1, 0, 1, 0, 1}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}} ;
}
