Instructions for upgrading the subset of Boost headers distributed
with libmesh:

.) Download and unpack the newest boost source distribution to e.g.
   /path/to/unpacked/boost/boost_1_XY_Z

.) Using the test_boost.cc file located in this directory, run

   $CXX -MM -MF foo.d -I/path/to/unpacked/boost/boost_1_XY_Z test_boost.cc

   where $CXX is the C++ compiler you want to use to build boost
   dependencies.  Note that different compilers will generate
   different subsets of boost headers, and therefore the process
   described here must be repeated with any new compiler you wish to
   use with libmesh.  If your compiler does not support -MM, you will
   need to figure out which dependency generation flag it uses that
   skips system headers.

.) Inspect the contents of the foo.d dependency file. It should contain all
   the headers from the boost distro that are required to build the subset of
   boost used by libmesh.

.) If you are updating to a brand new version of Boost, remove all the
   existing boost headers.  Otherwise, if you are just generating
   dependencies for a new compiler, skip this step and continue with
   copying files in the next step.
   git rm -r contrib/boost/include/boost
   git ci -a -m"Updating boost."

.) Copy all the required boost header filenames (with relative paths)
   into the script below on the 'files=' line, and then run the script
   to actually copy files out of the boost distribution and into libmesh's
   contrib/boost/include/boost directory.

.) Commit the new headers, squash with the previous removal patch.
   git add contrib/boost/include/boost
   git ci --amend

.) Update contrib/boost/include/Makefile.am with the list of files
   from foo.d as well.  Commit Makefile.am.  You can get a list of
   candidate files to install by doing:

   cd $LIBMESH_ROOT/contrib/boost/include
   find . -name "*.hpp"

.) Run boostrap in the top level of the libmesh source distribution to
   regenerate Makefile.in.  Commit Makefile.in.

.) Follow the normal instructions to make and install libmesh, and
   verify that test_boost.cc can be built against the boost installed
   with libmesh.  You can do this, for example, with the
   Makefile.test_boost included in this directory by typing:

   make -f Makefile.test_boost test_boost
